@page "/"
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using DataAcquisitionServerAppWithWebPage.Data

@inject NavigationManager NavigationManager
@inject ApiAuthenticationStateProvider AuthenticationStateProvider
<h2>用户登录</h2>
<div class="container">
    <h2 class="text-center">Login</h2>
    <hr />
    <div class="row justify-content-center">
        <div class="col-md-4">
            <EditForm Model="@loginModel" OnValidSubmit="@OnSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="username">Username:</label>
                    <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" />
                </div>

                <div class="form-group">
                    <label for="password">Password:</label>
                    <InputText id="password" class="form-control" type="password" @bind-Value="@loginModel.Password" />
                </div>

                <button style="margin-top:10px;" type="submit" class="btn btn-primary">Login</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task OnSubmit()
    {
        const string fixedUsername = "admin";
        const string fixedPassword = "password";

        if (loginModel.Username == fixedUsername && loginModel.Password == fixedPassword)
        {
            var identity = new ClaimsIdentity(new[]
            {
                new Claim(ClaimTypes.Name, loginModel.Username),
        }, "apiauth_type");

            var user = new ClaimsPrincipal(identity);

            await AuthenticationStateProvider.MarkUserAsAuthenticated(user);

            // Redirect to Home/Index page
            var query = System.Web.HttpUtility.ParseQueryString(new Uri(NavigationManager.Uri).Query);
            string returnUrl = query["returnUrl"];

            if (!string.IsNullOrEmpty(returnUrl))
            {
                NavigationManager.NavigateTo(returnUrl);
            }
            else
            {
                if (NavigationManager.Uri.Contains("index")) // 检查当前页面是否已经是首页
                {
                    // 当前页面已经是首页，无需刷新
                }
                else
                {
                    NavigationManager.NavigateTo("index");
                }
            }
        }
        else
        {
            loginModel.ErrorMessage = "Invalid username or password";
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
        public string ErrorMessage { get; set; }
    }
}
