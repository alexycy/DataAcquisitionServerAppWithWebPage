@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using DataAcquisitionServerAppWithWebPage.Data
@inherits LayoutComponentBase

@inject NavigationManager NavigationManager
@inject ApiAuthenticationStateProvider AuthenticationStateProvider

<PageTitle>数据采集服务器控制后台</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 auth">
            @if (authState?.User?.Identity?.IsAuthenticated ?? false)
            {
                <a href="logout" class="nav-link">Hello, @authState.User.Identity.Name!</a>
            }
            else
            {
                <NavLink href="/?returnUrl=/">Login</NavLink>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private AuthenticationState authState;
    private bool isSubscribed = false;
    protected override async Task OnInitializedAsync()
    {
        authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        StateHasChanged();
        if (!isSubscribed)
        {
            AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
            isSubscribed = true;
        }

    }
    private void OnAuthenticationStateChanged()
    {
        //NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
        AuthenticationStateProvider.ifRefresh = true;
    }
    public void Dispose()
    {
        if (isSubscribed)
        {
            AuthenticationStateProvider.AuthenticationStateChanged -= OnAuthenticationStateChanged;
            isSubscribed = false;
        }
    }

}
